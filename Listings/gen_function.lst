C51 COMPILER V9.60.0.0   GEN_FUNCTION                                                      01/25/2023 18:46:08 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE GEN_FUNCTION
OBJECT MODULE PLACED IN .\Objects\gen_function.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE gen_function.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\gen_function.lst) TABS(2) OBJECT(.\Objects\gen_function.obj)

line level    source

   1          #include "header.h"
   2          #include <reg51.h>
   3          sbit SWITCH = P2 ^ 3;
   4          sbit LED1 = P2 ^ 4;
   5          sbit LED2 = P2 ^ 5;
   6          sbit LED3 = P2 ^ 6;
   7          sbit LED4 = P2 ^ 7;
   8          
   9          sbit R0 = P1 ^ 4;
  10          sbit R1 = P1 ^ 5;
  11          sbit R2 = P1 ^ 6;
  12          sbit R3 = P1 ^ 7;
  13          sbit C0 = P1 ^ 0;
  14          sbit C1 = P1 ^ 1;
  15          sbit C2 = P1 ^ 2;
  16          sbit C3 = P1 ^ 3;
  17          unsigned char i, x;
  18          
  19          // function for DISPLAY MENU
  20          unsigned char menu_display(void) // display and choose option function
  21          {
  22   1      
  23   1        uart_string("\t\tVector Board Dignosis -JASMIN.BHUVA\r\nA/a.LED Testing\r\nB/b.SWITCH Testing\r\nC/c.LCD 
             -Testing\r\nD/d.KEYPAD Testing\r\nE/e.I2C EEPROM Testing\r\nF/f.SPI ADC Testing\r\nEnter Option:-");
  24   1        x = uart_rxd();
  25   1        return x;
  26   1      }
  27          
  28          // fun for LED testing
  29          void led_testing(void) // function of led testing
  30          {
  31   1      
  32   1        uart_string("\r\n\r\nPlease Connect:\r\nActiv Low LEDS On P2.4 To P2.7(4 Leds)\r\nPRESS Enter To Check");
             - // whenever led testing start this msg will print
  33   1      abc:
  34   1        x = uart_rxd(); // nothing but and taking input from S.T.
  35   1        LED1 = LED2 = LED3 = LED4 = 1;
  36   1        if (x == '\r') // '\r'is nothing but and ENTER_KEY
  37   1        {
  38   2          uart_string("\r\nTesting Is Start..\r\n");
  39   2      
  40   2          for (i = 0; i < 6; i++)
  41   2          {
  42   3            LED1 = ~LED1;
  43   3            delay(100);
  44   3            LED2 = ~LED2;
  45   3            delay(100);
  46   3            LED3 = ~LED3;
  47   3            delay(100);
  48   3            LED4 = ~LED4;
  49   3            delay(100);
  50   3          }
  51   2          LED1 = LED2 = LED3 = LED4 = 1;
  52   2          uart_string("\r\nAll LEDs Are Working (y/n) ??"); // after led stop this msg will prt on S.T.
C51 COMPILER V9.60.0.0   GEN_FUNCTION                                                      01/25/2023 18:46:08 PAGE 2   

  53   2        new_:
  54   2          x = uart_rxd();
  55   2          // x input action
  56   2          if ((x == 'n') || (x == 'N'))
  57   2          {
  58   3            uart_string("\r\n\r\nMake Sure\r\n1.Wire Connection Is Proper\r\n2.All LEDs Anodes Should Be Connected 
             -With VCC(+5vDC)\r\n3.All LEDs Cathodes Should Be Connected With P2.4-P2.7\r\nPRESS Enter To Test Again");
  59   3            goto abc;
  60   3          }
  61   2          else if ((x == 'y') || (x == 'Y'))
  62   2            goto back;
  63   2          else
  64   2          {
  65   3            uart_string("\r\nPlease Enter (y/n) Only:");
  66   3            goto new_;
  67   3          }
  68   2          // x input action
  69   2        back:
  70   2          uart_string("\r\n\r\nNow Connect:\r\nActive High LEDs On P2.4 to P2.7(4 Leds)\r\nPress Enter To Check:")
             -;
  71   2        back_:
  72   2          x = uart_rxd();
  73   2          LED1 = LED2 = LED3 = LED4 = 0;
  74   2          delay(100);
  75   2          if (x == '\r')
  76   2          {
  77   3            uart_string("\r\nTesting Is Start..\r\n");
  78   3      
  79   3            for (i = 0; i < 6; i++)
  80   3            {
  81   4              LED1 = ~LED1;
  82   4              delay(100);
  83   4              LED2 = ~LED2;
  84   4              delay(100);
  85   4              LED3 = ~LED3;
  86   4              delay(100);
  87   4              LED4 = ~LED4;
  88   4              delay(100);
  89   4            }
  90   3            LED1 = LED2 = LED3 = LED4 = 0;
  91   3          }
  92   2          else
  93   2          {
  94   3            uart_string("\r\nPlease Press ENTER Only:");
  95   3            goto back_;
  96   3          }
  97   2      
  98   2          uart_string("\r\nLED Working (y/n) ??"); // after led stop this msg will prt on S.T.
  99   2        xyz:
 100   2          x = uart_rxd();
 101   2      
 102   2          if ((x == 'y') || (x == 'Y')) // here x is y/Y
 103   2          {
 104   3            uart_string("\n\r\n\r");
 105   3            return;
 106   3          }
 107   2          else if ((x == 'N') || (x == 'n')) // here x is n/N
 108   2          {
 109   3            uart_string("\r\n\r\nMake Sure\r\n1.Wire Connection Is Proper\r\n2.LEDs Anodes Should Be Connected With
             - P2.4 to P2.7\r\n3.LED Cathode Should Be Connected With VCC(+5v)\r\nPRESS Enter To Test Again");
 110   3            goto back_;
 111   3          }
C51 COMPILER V9.60.0.0   GEN_FUNCTION                                                      01/25/2023 18:46:08 PAGE 3   

 112   2          else
 113   2          {
 114   3            uart_string("\r\nPlease Enter (y/n) Only:");
 115   3            goto xyz;
 116   3          }
 117   2        }
 118   1        else
 119   1        {
 120   2          uart_string("\r\nPlease Press Enter Only\r\n");
 121   2          goto abc;
 122   2        }
 123   1      }
 124          
 125          ////////////////// fun for SWITCH testing /////////////////////////////
 126          
 127          void switch_testing(void)
 128          {
 129   1        LED1 = 1;
 130   1        uart_string("\r\n\r\nPlease Connect:\r\nSwitch To P2.3\r\nLED To P2.4(Active Low Preferable)\r\nNow PRESS
             - Switch 3 Time(With Delay Of 0.5 Sec)\r\n");
 131   1      abc:
 132   1      
 133   1        for (i = 0; i < 3; i++)
 134   1        {
 135   2          while (SWITCH == 1)
 136   2            ;
 137   2      
 138   2          LED1 = ~LED1;
 139   2          delay(250);
 140   2          while (SWITCH == 0)
 141   2            ;
 142   2          // for deal with key bounceing
 143   2          LED1 = ~LED1;
 144   2          delay(250);
 145   2        }
 146   1      
 147   1        uart_string("\r\nIs LED Glow When Switch Pressed (y/n) ??");
 148   1      xyz:
 149   1        x = uart_rxd(); // waiting from I/p From S.T.
 150   1      
 151   1        if ((x == 'y') || (x == 'Y'))
 152   1        {
 153   2          uart_string("\r\n\r\n");
 154   2          return;
 155   2        }
 156   1        else if ((x == 'N') || (x == 'n')) // here x is 2.NO
 157   1        {
 158   2          uart_string("\r\n\r\nMake Sure\r\n1.Wire Connection Is Proper\r\n2.Switch Second Terminal Connected With
             - GND\r\n3.LED Connected Proprly\r\nNow PRESS Switch 3 Time(With Delay Of 0.5 Sec)\r\n");
 159   2          goto abc;
 160   2        }
 161   1        else
 162   1        {
 163   2          uart_string("\r\nPlease Enter (y/n) Only!\r\n");
 164   2          goto xyz;
 165   2        }
 166   1      }
 167          
 168          ///////////////  fun for LCD testing ///////////////////////
 169          void lcd_testing(void)
 170          {
 171   1        uart_string("\r\n\r\nPlease Connect:\r\nLCD D0-D7 T0 P0-P7\r\nRS To P2.0\r\nRW To P2.1\r\nEN To P2.2\r\nP
C51 COMPILER V9.60.0.0   GEN_FUNCTION                                                      01/25/2023 18:46:08 PAGE 4   

             -ress Enter To Check");
 172   1      abc:
 173   1        x = uart_rxd();
 174   1      
 175   1        if (x == '\r')
 176   1        {
 177   2          uart_string("\r\nStart Testing...\r\n");
 178   2          lcd_check();
 179   2        }
 180   1        else
 181   1        {
 182   2          uart_string("\r\nPlease Press Enter Only\r\n");
 183   2          goto abc;
 184   2        }
 185   1      xyz:
 186   1        uart_string("\r\nIs Every Words & Pixel Of LCD Working (y/n) ??");
 187   1        //  for(i=0;i<10;i++)
 188   1        x = uart_rxd();
 189   1      
 190   1        if ((x == 'y') || (x == 'Y'))
 191   1        {
 192   2          uart_string("\r\n\r\n");
 193   2          return;
 194   2        }
 195   1        else if ((x == 'n') || (x == 'N'))
 196   1        {
 197   2          uart_string("\r\n\r\nMake Sure\r\n1.RS At P2.0 Connect\r\n2.RW At p2.1 Connect\r\n3.EN At p2.2 Connected
             -\r\n4.LCD Is In 8-Bit Mode So\r\n  D0-D7 Pins Should Be Connected To P0.0-P0.7\r\n5.Port0 Need Pull_Up Reg\r\n  Connect 
             -If Not Connected\r\nPRESS Enter To Check Again");
 198   2          goto abc;
 199   2        }
 200   1        else // if (((x!='n')&&(x!='N'))&&((x!='Y')&&(x!='y')))
 201   1          goto xyz;
 202   1      }
 203          
 204          ///////////// Keypad testing(4x4) ///////////////////////
 205          
 206          void keypad_testing(void)
 207          {
 208   1      
 209   1        unsigned char row = 0, col = 0;
 210   1      
 211   1        code unsigned char ary[4][4] = {{'1', '5', '9', 'D'},
 212   1                        {'2', '6', 'A', 'E'},
 213   1                        {'3', '7', 'B', 'F'},
 214   1                        {'4', '8', 'C', '='}};
 215   1      
 216   1        uart_string("\r\n\r\nConnect 4x4 KeyPad:");
 217   1      abc:
 218   1        uart_string("\r\nP1.0-P1.3 To C0-C3\r\nP1.4-P1.7 To R0-R3\r\nAfter Press All Switch Last Press [4][4] (SW
             -16) To Exit\r\n");
 219   1        uart_string("\r\nStart Testing...\r\n");
 220   1      
 221   1        while (1)
 222   1        {
 223   2      
 224   2          R0 = R1 = R3 = R2 = 0;
 225   2          C0 = C1 = C2 = C3 = 1;
 226   2      
 227   2          while ((C1 & C2 & C3 & C0) != 0)
 228   2            ;
 229   2          R0 = 0;
C51 COMPILER V9.60.0.0   GEN_FUNCTION                                                      01/25/2023 18:46:08 PAGE 5   

 230   2          R1 = R3 = R2 = 1;
 231   2          if ((C0 & C1 & C2 & C3) == 0)
 232   2          {
 233   3            row = 0;
 234   3            goto col_check;
 235   3          }
 236   2          R1 = 0;
 237   2          R0 = R3 = R2 = 1;
 238   2          if ((C0 & C1 & C2 & C3) == 0)
 239   2          {
 240   3            row = 1;
 241   3            goto col_check;
 242   3          }
 243   2          R2 = 0;
 244   2          R0 = R1 = R3 = 1;
 245   2          if ((C0 & C1 & C2 & C3) == 0)
 246   2          {
 247   3            row = 2;
 248   3            goto col_check;
 249   3          }
 250   2          R3 = 0;
 251   2          R0 = R1 = R2 = 1;
 252   2          if ((C0 & C1 & C2 & C3) == 0)
 253   2          {
 254   3            row = 3;
 255   3            goto col_check;
 256   3          }
 257   2        col_check:
 258   2          if (C0 == 0)
 259   2            col = 0;
 260   2          else if (C1 == 0)
 261   2            col = 1;
 262   2          else if (C2 == 0)
 263   2            col = 2;
 264   2          else
 265   2            col = 3;
 266   2          if ((ary[col][row]) == '=')
 267   2          {
 268   3            RI = 0;
 269   3            TI = 0;
 270   3            x = 0;
 271   3            uart_string("\r\nAll Switch Work Proper(y/n)??\r\n");
 272   3          abc_:
 273   3            x = uart_rxd();
 274   3      
 275   3            if ((x == 'y') || (x == 'Y'))
 276   3            {
 277   4              uart_string("\r\n");
 278   4              break;
 279   4            }
 280   3            else if ((x == 'n') || (x == 'N'))
 281   3            {
 282   4              uart_string("\r\nMakeSure\r\n1.Every Connection Is Proper\r\n2.Press Switch One By One (with delay of 
             -0.5 sec)\r\n3.All Connection And Again Connect To");
 283   4              goto abc;
 284   4            }
 285   3            else
 286   3            {
 287   4              uart_string("\r\nPlease Enter (y/n) Only!!\r\n");
 288   4              goto abc_;
 289   4            }
 290   3          }
C51 COMPILER V9.60.0.0   GEN_FUNCTION                                                      01/25/2023 18:46:08 PAGE 6   

 291   2          while ((C1 & C2 & C0 & C3) == 0)
 292   2            ;
 293   2      
 294   2          delay(500);
 295   2          uart_txd(ary[col][row]);
 296   2      
 297   2        } // while
 298   1      } // end


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    914    ----
   CONSTANT SIZE    =   1961    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
